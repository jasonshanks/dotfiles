<?xml version="1.0"?>
<ruleset name="WordPress Global Standards">
    <description>WordPress Coding Standards for all projects</description>

    <!-- What to scan -->
    <file>.</file>

    <!-- Common excludes -->
    <exclude-pattern>/vendor/*</exclude-pattern>
    <exclude-pattern>/node_modules/*</exclude-pattern>
    <exclude-pattern>/dist/*</exclude-pattern>
    <exclude-pattern>/build/*</exclude-pattern>
    <exclude-pattern>*.js</exclude-pattern>
    <exclude-pattern>*.css</exclude-pattern>
    <exclude-pattern>*.scss</exclude-pattern>
    <exclude-pattern>*.xml</exclude-pattern>
    <exclude-pattern>*.txt</exclude-pattern>

    <!-- How to scan -->
    <arg value="sp"/><!-- Show sniff and progress -->
    <arg name="basepath" value="."/><!-- Strip the file paths down to the relevant bit -->
    <arg name="colors"/>
    <arg name="extensions" value="php"/><!-- Only scan PHP files -->
    <arg name="parallel" value="8"/><!-- Enables parallel processing -->
    <arg name="cache"/><!-- Add cache for better performance -->

    <!-- Rules: WordPress Coding Standards -->
    <!-- https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards -->
    <rule ref="WordPress">
        <!-- Common exclusions for modern WordPress development -->
        <exclude name="WordPress.Files.FileName"/>
        <exclude name="WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase"/>
        <exclude name="WordPress.PHP.YodaConditions.NotYoda"/>
        <!-- Common exclusions in general -->
        <exclude name="WordPress.PHP.DisallowShortTernary"/><!-- Allow short ternary -->
        <exclude name="WordPress.PHP.DiscouragedPHPFunctions.obfuscation_base64_encode"/><!-- Allow base64 -->
        <exclude name="WordPress.WP.AlternativeFunctions"/><!-- Allow PHP native functions -->
        <exclude name="WordPress.PHP.NoSilencedErrors"/><!-- Allow error suppression when needed -->
 </rule>

    <!-- Allow . in hook names -->
    <rule ref="WordPress.NamingConventions.ValidHookName">
        <properties>
            <property name="additionalWordDelimiters" value="."/>
        </properties>
    </rule>

  <!-- Minimum PHP version -->
    <config name="testVersion" value="8.0+"/>
    <rule ref="PHPCompatibility"/>

    <!-- Array syntax -->
    <rule ref="Generic.Arrays.DisallowShortArraySyntax.Found">
        <severity>0</severity>
    </rule>

    <!-- WordPress Rules -->
    <rule ref="WordPress-Core"/>
    <rule ref="WordPress-Docs"/>
    <rule ref="WordPress-Extra"/>
     <!-- Optional: Exclude some Extra rules that might be too strict -->
        <exclude name="WordPress.PHP.DisallowShortTernary"/>
    <!-- </rule> -->

  <!-- Line Length -->
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="120"/><!-- Increased from default 80 -->
            <property name="absoluteLineLimit" value="140"/>
        </properties>
    </rule>

    <!-- Third-party exclusions -->
    <exclude-pattern>/third-party/*</exclude-pattern>
    <exclude-pattern>/vendor/*</exclude-pattern>
    <exclude-pattern>/node_modules/*</exclude-pattern>
    <exclude-pattern>/wp-admin/*</exclude-pattern><
    <exclude-pattern>/wp-includes/*</exclude-pattern>

    <!-- Modern PHP Features -->
    <rule ref="Generic.PHP.ForbiddenFunctions">
        <properties>
            <property name="forbiddenFunctions" type="array">
                <element key="sizeof" value="count"/>
                <element key="delete" value="unset"/>
                <element key="print" value="echo"/>
                <element key="is_null" value="null"/>
                <element key="create_function" value="null"/>
            </property>
        </properties>
    </rule>
</ruleset>
